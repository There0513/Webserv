#Changes from NGINX conf file: 
#   1. sections are among []
#   2. directives and values are separated by a '='
#   3. authorized methods replaces limit_exception
#   4. location_match only include exact match

#Rules of the conf file:
#   1. Mandatory in server section: listen port, server_name, at least 1 location
#   2. Optional in server section: root, error_page, max_body_size
#   3. Mandatory in location section: return or (root + authorized methods)
#   4. Optional in location section: autoindex on/off, return pages, cgi_allowed, cgi_path, upload_path
#   5. There can be multiple servers (even with the same port) and multiple locations per server
#   6. If two servers have the same listen port, the chosen one will be the first one
#   7. root path and location path contain no end slash

#Definitions:
#   1. server_name: the name of your domain. In any case, the request will point to localhost (127.0.0.1) IP address
        #but the "host" of the request can correspond to server_name
#   2. autoindex: generates an automatic listing of the required directory. 
#       For example, if the autoindex of /uploads in on, the web page will be a listing of the content of the /uploads folder
#   3. listen: defines the IP address and the port to which the server block will answer. Can be an IP address, a port, or both. 
        #If the port is not specified, the default port 8080 will be attributed.
        #If the IP address is not specified, the default address 0.0.0.0 will be attributed.
        #The server that will serve the request is the one that matches most the IP + port specified in the request.
        #If several servers have the same level of specifity, the server chosen will be the one where server_name = host of the request
        #If there are still several servers, the default one will be chosen = the first one.
#   4. location directive: defines with which element the server should compare the URI of the request
    #URI = the part after the IP + port of the browser
    #the correspondance can be of several types: prefix, exact, case sensitive...
    #Here, we only care about prefix and exact 
    #if there are several correspondance, the longest one will be chosen
#   5. root: path to the files requested. 
    #If in the location block, the location_match is added after the root directive
    #If there is a root directive before the location block, it is overriden by the one in the location block
#   6. cgi: https://www.nginx.com/resources/wiki/start/topics/examples/fastcgiexample/


#https://www.digitalocean.com/community/tutorials/understanding-nginx-server-and-location-block-selection-algorithms-fr
#https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/
#http://nginx.org/en/docs/beginners_guide.html#:~:text=For%20matching%20requests%2C%20the%20URI,one%20with%20the%20longest%20prefix.

[server] {

    listen  =  localhost:80;

    server_name = example.org | www.example.org;
  
    root     =   /data/www;

    error_page = /404_error.html | /403_error.html;

    client_max_body_size = 100M;

    [location /] {
  
        authorized_methods = GET | DELETE;
        cgi = .php:/usr/bin/php-cgi;
    }

    [location /uploads] {

        root = /var/www;
        authorized_methods = GET | DELETE;
    }

    [location /app] {
  
        authorized_methods = GET | DELETE;
    }
}

[server] {

    listen  =  localhost:80;

    server_name = example.com;
    
    [location /] {

        autoindex  = on;
        authorized_methods = GET | DELETE;
    }

    [location /uploads] {

        root = /var/www/bibou;
        authorized_methods = GET | DELETE;
    }

    [location /app] {
  
        authorized_methods = GET | POST;
    }
}

[server] {

    listen  =  localhost:443;

    server_name = blibli;
    
    [location /] {

        autoindex  = on;
        authorized_methods = GET | DELETE;
    }

    [location /uploads] {

        root = /var/www/blibli;
        authorized_methods = POST;
    }

    [location /app] {
  
        authorized_methods = GET | POST;
    }
}